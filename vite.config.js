import {defineConfig} from 'vite';
import laravel from 'laravel-vite-plugin';
import vue from '@vitejs/plugin-vue';

export default defineConfig({
    plugins: [
        laravel({
            input: 'resources/js/app.js',
            refresh: true,
        }),
        vue({
            template: {
                transformAssetUrls: {
                    base: null,
                    includeAbsolute: false,
                },
            },
        }),
    ],
    // Настраиваем vite для работы с Docker. Чтобы запустить Vite в Docker-контейнере, нужно зайти в контейнер и выполнить команду: npm run dev
    server: {
        // Описание: Эта настройка указывает Vite слушать соединения на всех сетевых интерфейсах контейнера.
        // Причина использования: В Docker-контейнере, IP-адрес localhost будет относиться к самому контейнеру.
        // Использование 0.0.0.0 позволяет принимать соединения от внешних источников, что необходимо, когда вы хотите получить доступ к Vite из браузера на вашей хост-машине или с других контейнеров.
        host: '0.0.0.0',
        // Описание: Это порт, на котором Vite будет слушать входящие соединения.
        // Причина использования: Установка конкретного порта гарантирует, что вы всегда знаете, какой порт использовать для доступа к вашему приложению.
        // Необходимо пробросить порт внутри контейнера наружу с помощью docker-compose.yml и директивы ports.
        port: '5173',
        // Описание: Эта настройка указывает, на какой хост должны отправляться WebSocket-сообщения для Hot Module Replacement (HMR).
        // Причина использования: Когда вы используете Docker, вам нужно указать, как клиент (ваш браузер) будет подключаться к серверу HMR.
        // Указание host: 'localhost' означает, что Vite будет пытаться подключиться к HMR-серверу на локальной машине, что работает при доступе к приложению из браузера на той же машине, где запущен Docker-контейнер.
        // Если вы подключаетесь удаленно, вам нужно указать правильный хост, который доступен вашему браузеру.
        hmr: {
            host: 'localhost',
        },
    },
    resolve: {
        // Описание: Эта настройка создает алиас для пути к файлам.
        // В данном случае, алиас @ указывает на папку resources/js.
        // Причина использования: Алиасы облегчают импорт файлов в вашем проекте, делая пути к файлам более короткими и управляемыми.
        // Вместо написания длинного пути к файлу, вы можете использовать алиас.
        // Например:
        // import MyComponent from '@/components/MyComponent.vue';
        // Вместо:
        // import MyComponent from '../../../resources/js/components/MyComponent.vue';
        alias: {
            '@': '/resources/js',
        },
    },
});
